events {
    worker_processes auto;
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Configuration de base
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logs optimisés
    log_format main '$remote_addr - $remote_user [$time_local] ""$request"" '
                    '$status $body_bytes_sent ""$http_referer"" '
                    '""$http_user_agent"" ""$http_x_forwarded_for"" '
                    'rt=$request_time uct=""$upstream_connect_time"" '
                    'uht=""$upstream_header_time"" urt=""$upstream_response_time""';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Sécurité
    server_tokens off;
    add_header X-Frame-Options ""SAMEORIGIN"" always;
    add_header X-Content-Type-Options ""nosniff"" always;
    add_header X-XSS-Protection ""1; mode=block"" always;
    add_header Referrer-Policy ""strict-origin-when-cross-origin"" always;
    add_header Content-Security-Policy ""default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; connect-src 'self'; font-src 'self'; object-src 'none'; media-src 'self'; frame-src 'none';"" always;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/wasm
        image/svg+xml;

    # Cache statique
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   1y;
        application/javascript     1y;
        application/wasm          1y;
        ~image/                    1M;
        ~font/                     1M;
    }
    expires $expires;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Endpoint de santé
        location /health {
            access_log off;
            return 200 ""healthy\nversion: 3.0.0\nai: enabled\n"";
            add_header Content-Type text/plain;
        }

        # API future (préparation)
        location /api/ {
            add_header Access-Control-Allow-Origin ""*"" always;
            add_header Access-Control-Allow-Methods ""GET, POST, PUT, DELETE, OPTIONS"" always;
            add_header Access-Control-Allow-Headers ""Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With"" always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            return 404 ""API endpoints not implemented yet"";
        }

        # Modèles TensorFlow.js avec headers spéciaux
        location /models/ {
            expires 1y;
            add_header Cache-Control ""public, immutable"";
            add_header Cross-Origin-Embedder-Policy ""require-corp"";
            add_header Cross-Origin-Opener-Policy ""same-origin"";
            add_header Access-Control-Allow-Origin ""*"";
        }

        # Données utilisateur
        location /data/ {
            add_header Cache-Control ""no-cache, no-store, must-revalidate"";
            add_header Pragma ""no-cache"";
            add_header Expires ""0"";
        }

        # Fichiers statiques avec cache optimisé
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|wasm)$ {
            expires 1y;
            add_header Cache-Control ""public, immutable"";
            add_header Vary ""Accept-Encoding"";
        }

        # Application principale
        location / {
            try_files $uri $uri/ /index.html;

            # Headers pour SPA
            add_header Cache-Control ""no-cache, no-store, must-revalidate"";
            add_header Pragma ""no-cache"";
            add_header Expires ""0"";
        }

        # Métriques nginx (monitoring)
        location /nginx-metrics {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Sécurité : bloquer les accès non autorisés
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Gestion des erreurs
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
